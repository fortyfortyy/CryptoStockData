{"version":3,"file":"js/718.js","mappings":"sLACOA,MAAM,0B,GACTC,EAAAA,EAAAA,GAAqC,MAAjCD,MAAM,SAAQ,kBAAc,G,GAC3BA,MAAM,c,GAEFA,MAAM,O,0CAJjBE,EAAAA,EAAAA,IAUM,MAVNC,EAUM,CATJC,GACAH,EAAAA,EAAAA,GAMM,MANNI,EAMM,gBALJH,EAAAA,EAAAA,IAIMI,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAJ8CC,EAAAA,oBAAkB,CAAjCC,EAAOC,M,WAA5CP,EAAAA,EAAAA,IAIM,OAJDF,MAAM,kBAA8DS,IAAKD,G,EAC5EP,EAAAA,EAAAA,GAEM,MAFNS,GAEM,QADDD,GAAM,QAAI,QAAGD,EAAMG,KAAG,Q,yCAYnC,GACEC,KAAM,cACNC,OACE,MAAO,CACLC,mBAAoB,GAExB,EACAC,UACEC,KAAKC,wBACLC,SAASC,MAAQ,2BAEjBH,KAAKI,mBAAqBC,aAAY,KACpCC,QAAQC,IAAI,+CACZP,KAAKC,uBAAsB,GAC1B,IACL,EAEAO,QAAS,CACPC,8BACE,IAAKT,KAAKU,OAAOC,MAAMC,gBAGrB,OAFAC,cAAcb,KAAKc,YACnBC,EAAAA,EAAAA,KAAY,KAIdT,QAAQC,IAAI,mCACNS,EAAAA,GAAAA,IACG,gBACJC,MAAKC,IACoB,MAApBA,EAASC,QACXnB,KAAKU,OAAOU,eAEdpB,KAAKF,mBAAqBoB,EAASrB,IAAG,IAEvCwB,OAAMC,IACLhB,QAAQC,IAAIe,GACZtB,KAAKuB,aAAY,GAEzB,GAGFC,YACElB,QAAQC,IAAI,8BACZM,cAAcb,KAAKI,mBACrB,G,UCvDF,MAAMqB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://frontendaa/./src/views/StockPricesView.vue","webpack://frontendaa/./src/views/StockPricesView.vue?d754"],"sourcesContent":["<template>\n  <div class=\"stock-prices-container\">\n    <h1 class=\"title\">Current Prices</h1>\n    <div class=\"stock-data\">\n      <div class=\"stock-container\" v-for=\"(value, key) in latestCryptoPrices\" :key=\"value\">\n        <div class=\"box\">\n          {{ key }} - ${{ value.USD }}\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport router from \"@/router\";\n\nexport default {\n  name: 'StockPrices',\n  data() {\n    return {\n      latestCryptoPrices: []\n    }\n  },\n  mounted() {\n    this.getLatestCryptoPrices()\n    document.title = 'Crypto Prices | StockApp'\n\n    this.price_update_timer = setInterval(() => {\n      console.log('Set timer to recieve stock data every 5 sec')\n      this.getLatestCryptoPrices()\n    }, 5000)\n  },\n\n  methods: {\n    async getLatestCryptoPrices() {\n      if (!this.$store.state.isAuthenticated) {\n        clearInterval(this.timer)\n        router.push('/')\n        return\n      }\n\n      console.log('Updating crypto prices...')\n      await axios\n          .get('/api/stocks/')\n          .then(response => {\n            if (response.status !== 200) {\n              this.$store.refreshToken()\n            }\n            this.latestCryptoPrices = response.data\n          })\n          .catch(error => {\n            console.log(error)\n            this.verifyToken()\n          })\n    },\n  },\n\n  unmounted() {\n    console.log('niszcze price_update_timer')\n    clearInterval(this.price_update_timer)\n  }\n}\n</script>\n\n\n<style lang=\"scss\">\n.stock-prices-container {\n  color: #ffffff;\n  display: grid;\n  grid-gap: 2rem;\n  grid-template-rows: 0.5fr 2fr;\n  justify-content: center;\n  align-content: center;\n\n  @media (min-width: 1024px) {\n    margin-top: 30px;\n    font-size: 30px !important;\n  }\n\n}\n\n.stock-prices-container .title {\n  background: -webkit-linear-gradient(rgb(224, 23, 221), rgba(10, 115, 231, 0.89));\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n}\n\n.stock-container {\n  padding: 5px;\n}\n</style>","import { render } from \"./StockPricesView.vue?vue&type=template&id=7999234d\"\nimport script from \"./StockPricesView.vue?vue&type=script&lang=js\"\nexport * from \"./StockPricesView.vue?vue&type=script&lang=js\"\n\nimport \"./StockPricesView.vue?vue&type=style&index=0&id=7999234d&lang=scss\"\n\nimport exportComponent from \"/Users/daniel/PycharmProjects/StockApp/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","$data","value","key","_hoisted_4","USD","name","data","latestCryptoPrices","mounted","this","getLatestCryptoPrices","document","title","price_update_timer","setInterval","console","log","methods","async","$store","state","isAuthenticated","clearInterval","timer","router","axios","then","response","status","refreshToken","catch","error","verifyToken","unmounted","__exports__","render"],"sourceRoot":""}